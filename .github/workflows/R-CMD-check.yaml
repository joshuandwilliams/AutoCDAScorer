name: R CMD check

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

permissions:
  contents: read

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    # Strategy matrix for different OS and R versions
    strategy:
      fail-fast: false # Prevent job cancellation if one matrix element fails
      matrix:
        config:
          # Check on the latest versions of macOS, Windows, and Ubuntu
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,  r: 'release'}
          # Optionally, add development version of R or older releases:
          # - {os: ubuntu-latest,  r: 'devel'}
          # - {os: ubuntu-latest,  r: 'oldrel-1'} # Check latest R-1 release

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up R ${{ matrix.config.r }}
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          use-public-rspm: true # Use RSPM for faster package installation
      - name: Set up Pandoc
        uses: r-lib/actions/setup-pandoc@v2
      - name: Install Dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          # List any extra packages needed for checks/tests/vignettes here
          # extra-packages: |
          #   any::cran/pkgname
          #   any::github/user/repo
          # List system dependencies for packages if needed (common on Linux)
          # needs: |
          #   tidyverse # Example: Installs system deps for tidyverse pkgs
          # Upgrade pak to the latest version
          pak-version: "devel"
          # Explicitly install rcmdcheck needed by the next step
          packages: |
            any::rcmdcheck
      - name: Run R CMD check
        uses: r-lib/actions/check-r-package@v2
        with:
          # Arguments for R CMD check
          # --as-cran makes checks stricter, simulating CRAN submission checks
          args: "--no-manual --as-cran"
          # Report errors on warnings and notes?
          # Set to 'warning' or 'note' to fail the check on these conditions
          error-on: "never" # Options: never, warning, note
          # Directory where the check results (tarball, logs) will be saved
          check-dir: "check"
          # Upload check results as workflow artifacts? Useful for debugging.
          upload-snapshots: true
