name: Test Coverage

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install scikit-learn numpy
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            libfontconfig1-dev \
            libharfbuzz-dev \
            libfreetype6-dev \
            libpng-dev \
            libjpeg-dev \
            libtiff-dev \
            libxt-dev \
            libgit2-dev \
            libz-dev \
            libgmp-dev \
            libblas-dev \
            liblapack-dev \
            libopenblas-dev \
            libfribidi-dev \
            libmagick++-dev
      - name: Install dependencies
        run: |
          install.packages(c("covr", "devtools", "mockery"))
        shell: Rscript {0}
      - name: Install AutoCDAScorer
        run: |
          library(devtools)
          devtools::install()
        shell: Rscript {0}
      - name: Run package tests
        run: |
          library(reticulate)
          reticulate::use_python(Sys.which("python"))
          reticulate::py_config()
          library(devtools)
          devtools::test()
        shell: Rscript {0}
      - name: Generate coverage report and upload to Codecov
        run: |
          library(covr)
          covr::codecov(token = Sys.getenv("CODECOV_TOKEN"))
        shell: Rscript {0}


